{"version":3,"sources":["webpack:///./src/views/renderModel/index.vue?53b5","webpack:///./src/views/renderModel/index.vue?453f","webpack:///src/views/renderModel/index.vue","webpack:///./src/views/renderModel/index.vue?3ae0","webpack:///./src/views/renderModel/index.vue?307d"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticStyle","_v","on","zoomIn","zoomOut","autoSize","showImage","$event","loadFlowCase","ref","staticRenderFns","Object","assign","NORMAL_TYPE_CLICKED","components","data","graph","editor","palettes","graphXml","activeNames","isNode","cellStyle","graphX","graphY","undoMng","isOutputXml","edgeStyle","outline","idSeed","normalIdSeed","currentNormalType","normalTypePosition","top","left","methods","createGraph","setGraphContainer","$refs","container","configureStylesheet","setHtmlLabels","foldingEnabled","connectionHandler","targetConnectImage","setAllowDanglingEdges","group","setVertex","setConnectable","defaultGroup","groupBorderSize","getLabel","cell","tmp","isCellLocked","index","indexOf","substring","isValidDropTarget","cells","evt","console","log","isSwimlane","isValidRoot","isCellSelectable","isHtmlLabel","initGraph","convertValueToString","showNormalTypeSelect","configOption","addMouseListener","addListener","setResizeContainer","popupMenuHandler","factoryMethod","menu","addItem","values","setPanning","setTooltips","setCellsEditable","setCellsResizable","setEnabled","vertexLabelsMovable","style","getStylesheet","putDefaultVertexStyle","putCellStyle","getDefaultEdgeStyle","execute","uploadPaintFlow","selectAll","removeCells","getSelectionCells","setTimeout","createXmlDom","document","all","xmlDom","loadXML","str","decode","getModel","beginUpdate","xmlDoc","node","documentElement","dec","endUpdate","outPutXml","encode","mounted","terminal","shape","stencil","constraints","$message","error","component"],"mappings":"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","file":"js/renderModel-chunk.0e2f72ac.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"customToolbarContainer\"},[_c('div',{staticClass:\"top-tools\"},[_c('el-col',{attrs:{\"span\":4}},[_c('div',{staticClass:\"grid-content bg-purple\",staticStyle:{\"color\":\"rgb(64, 158, 255)\",\"font-weight\":\"800\",\"font-size\":\"22px\",\"margin-left\":\"44px\"}},[_vm._v(\" Easy Editor \")])]),_c('el-col',{staticClass:\"tools-group\",attrs:{\"span\":12}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"放大\",\"placement\":\"bottom\"}},[_c('el-button',{staticStyle:{\"font-size\":\"18px\"},attrs:{\"icon\":\"el-icon-zoom-in\",\"type\":\"text\"},on:{\"click\":_vm.zoomIn}})],1),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"缩小\",\"placement\":\"bottom\"}},[_c('el-button',{staticStyle:{\"font-size\":\"18px\"},attrs:{\"icon\":\"el-icon-zoom-out\",\"type\":\"text\"},on:{\"click\":_vm.zoomOut}})],1),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"等比缩放\",\"placement\":\"bottom\"}},[_c('el-button',{staticStyle:{\"font-size\":\"16px\"},attrs:{\"type\":\"text\",\"icon\":\"iconfont icon-expandalt-fill\"},on:{\"click\":_vm.autoSize}})],1),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"导出为图片\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"iconfont icon-tupian\"},on:{\"click\":_vm.showImage}})],1)],1),_c('el-col',{attrs:{\"span\":8}},[_c('div',{staticClass:\"grid-content bg-purple\",staticStyle:{\"display\":\"flex\",\"justify-content\":\"flex-end\",\"padding-right\":\"20px\"}},[_c('el-button',{attrs:{\"round\":\"\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.loadFlowCase(1)}}},[_vm._v(\"组件关系\")]),_c('el-button',{attrs:{\"round\":\"\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.loadFlowCase(2)}}},[_vm._v(\"部署流程\")]),_c('el-button',{attrs:{\"round\":\"\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.loadFlowCase(3)}}},[_vm._v(\"Vue生命周期案例\")])],1)])],1),_c('div',{ref:\"container\",staticClass:\"graphContainer\",attrs:{\"id\":\"graphContainer\"}}),_vm._v(\" ] \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"customToolbarContainer\">\n    <!-- 画布中的顶部工具栏 -->\n    <div class=\"top-tools\">\n      <el-col :span=\"4\">\n        <div\n          class=\"grid-content bg-purple\"\n          style=\"\n            color: rgb(64, 158, 255);\n            font-weight: 800;\n            font-size: 22px;\n            margin-left: 44px;\n          \"\n        >\n          Easy Editor\n        </div>\n      </el-col>\n      <el-col :span=\"12\" class=\"tools-group\">\n        <el-tooltip\n          class=\"item\"\n          effect=\"dark\"\n          content=\"放大\"\n          placement=\"bottom\"\n        >\n          <el-button\n            icon=\"el-icon-zoom-in\"\n            style=\"font-size: 18px\"\n            type=\"text\"\n            @click=\"zoomIn\"\n          ></el-button>\n        </el-tooltip>\n        <el-tooltip\n          class=\"item\"\n          effect=\"dark\"\n          content=\"缩小\"\n          placement=\"bottom\"\n        >\n          <el-button\n            icon=\"el-icon-zoom-out\"\n            style=\"font-size: 18px\"\n            type=\"text\"\n            @click=\"zoomOut\"\n          ></el-button>\n        </el-tooltip>\n        <el-tooltip\n          class=\"item\"\n          effect=\"dark\"\n          content=\"等比缩放\"\n          placement=\"bottom\"\n        >\n          <el-button\n            @click=\"autoSize\"\n            type=\"text\"\n            style=\"font-size: 16px\"\n            icon=\"iconfont icon-expandalt-fill\"\n          ></el-button>\n        </el-tooltip>\n        <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"导出xml文件\" placement=\"bottom\">\n          <el-button type=\"text\" icon=\"iconfont icon-xmloutput\" @click=\"outPutXml\"></el-button>\n        </el-tooltip>-->\n        <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"显示网格背景\" placement=\"bottom\">\n          <el-button type=\"text\" icon=\"iconfont icon-dituleiwanggequ-copy\"></el-button>\n        </el-tooltip>-->\n        <el-tooltip\n          class=\"item\"\n          effect=\"dark\"\n          content=\"导出为图片\"\n          placement=\"bottom\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"iconfont icon-tupian\"\n            @click=\"showImage\"\n          ></el-button>\n        </el-tooltip>\n        <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"树形布局\" placement=\"bottom\">\n          <el-button type=\"text\" icon=\"iconfont icon-Directory-tree\"></el-button>\n        </el-tooltip>-->\n      </el-col>\n      <el-col :span=\"8\">\n        <div\n          class=\"grid-content bg-purple\"\n          style=\"display: flex; justify-content: flex-end; padding-right: 20px\"\n        >\n          <el-button round size=\"medium\" @click=\"loadFlowCase(1)\"\n            >组件关系</el-button\n          >\n          <el-button round size=\"medium\" @click=\"loadFlowCase(2)\"\n            >部署流程</el-button\n          >\n          <el-button round size=\"medium\" @click=\"loadFlowCase(3)\"\n            >Vue生命周期案例</el-button\n          >\n        </div>\n      </el-col>\n    </div>\n    <!-- 中心画布 -->\n    <div class=\"graphContainer\" id=\"graphContainer\" ref=\"container\"></div>\n    ]\n  </div>\n</template>\n<script>\n// 导入自定义图标数组\nimport {\n  MxEvent,\n  MxGraph,\n  MxEditor,\n  MxUtils,\n  MxGraphHandler,\n  MxConstants,\n  MxCodec,\n  MxRectangleShape,\n  MxCellTracker,\n  MxClient,\n  MxPerimeter,\n  MxEventObject,\n  MxGeometry,\n  MxCell,\n  ActiveXObject\n} from \"../../graph/index\"\nconst path = require('path');\n// 配置自定义事件\nObject.assign(MxEvent, {\n  NORMAL_TYPE_CLICKED: 'NORMAL_TYPE_CLICKED',\n});\n// 导入流程图案例数据\nconst xmlData1 = path.join(\"./data/data1.xml\");\nconst xmlData2 = path.join(\"./data/data2.xml\");\nconst xmlData3 = path.join(\"./data/data3.xml\");\nexport default {\n\n  components: {\n  },\n  data () {\n    return {\n      graph: null,\n      editor: null,\n      palettes: {},\n      graphXml: '',\n      activeNames: ['1', '2', '3'],\n      isNode: false,\n      cellStyle: \"\",\n      graphX: 100,\n      graphY: 10,\n      undoMng: \"\",\n      isOutputXml: false,\n      edgeStyle: 'orthogonalEdgeStyle',\n      outline: \"\",\n      idSeed: 0,\n      normalIdSeed: 0,\n      // configOrder: 0,\n      currentNormalType: {},\n      normalTypePosition: {\n        top: '0',\n        left: '0',\n      },\n    }\n  },\n  methods: {\n\n    createGraph () {\n      this.editor = new MxEditor()\n      this.graph = this.editor.graph\n      this.editor.setGraphContainer(this.$refs.container);\n      // 配置默认全局样式\n      this.configureStylesheet(this.graph);\n      // 去锯齿效果\n      MxRectangleShape.prototype.crisp = true;\n      // 定义全局变量，如。用于触发建立新的连接的活动区域的最小尺寸（以像素为单位），该部分（100％）的小区区域被用于触发新的连接，以及一些窗口和“下拉菜菜单选择\n      MxConstants.MIN_HOTSPOT_SIZE = 16;\n      MxConstants.DEFAULT_HOTSPOT = 1;\n\n      //cell创建支持传入html\n      this.graph.setHtmlLabels(true);\n\n      // 禁用分组的收缩功能 方法1:\n      // this.graph.isCellFoldable = (cell) => {\n      //   return false\n      // }\n\n      // 禁用分组的收缩功能 方法2:\n      this.graph.foldingEnabled = false;\n\n      // 显示中心端口图标\n      this.graph.connectionHandler.targetConnectImage = false;\n\n      // 禁止连接线晃动(即连线两端必须在节点上)\n      this.graph.setAllowDanglingEdges(true);\n\n      // 设置默认组\n      // groupBorderSize 设置图形和它的子元素的边距\n      var group = new MxCell('Group', new MxGeometry(), 'group;fontColor=white;');\n      group.setVertex(false);\n      // 设置组可连接\n      group.setConnectable(false);\n      this.editor.defaultGroup = group;\n      this.editor.groupBorderSize = 40;\n      // 返回元素\n      this.graph.getLabel = function (cell) {\n        var tmp = MxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n        if (this.isCellLocked(cell)) {\n          // 如元素被锁定 返回空标签\n          return '';\n        }\n        else if (this.isCellCollapsed(cell)) {\n          var index = tmp.indexOf('</h1>');\n          if (index > 0) {\n            tmp = tmp.substring(0, index + 5);\n          }\n        }\n        return tmp;\n      }\n\n      // 目标是否有效\n      this.graph.isValidDropTarget = function (cell, cells, evt) {\n        console.log(cell, cells, evt)\n        return this.isSwimlane(cell);\n      };\n\n      // 是否根元素\n      this.graph.isValidRoot = function (cell) {\n        return this.isValidDropTarget(cell);\n      }\n\n      // 是否可以被选中\n      this.graph.isCellSelectable = function () {\n        return false\n      };\n\n      // 禁用HTML的泳道标签，避免冲突\n      // 判断是否为泳道标签\n      this.graph.isHtmlLabel = function (cell) {\n        return !this.isSwimlane(cell);\n      }\n\n    },\n    // 初始化画布\n    initGraph () {\n      if ((this.graph) == null || (this.graph) == undefined) {\n        return\n      }\n      this.graph.convertValueToString = (cell) => {\n        // 从value中获取显示的内容\n        return cell['value'] ? cell['value'] : cell['title']\n      }\n      // 创建缩略图\n      // this.outline = new mxOutline(this.graph, this.$refs.styleSelect.$refs.showMap);\n    },\n\n    showNormalTypeSelect (sender, evt) {\n      let cell = evt.properties.cell.state.cell;\n      this.currentNormalType = cell\n\n    },\n\n\n    // 基础配置函数\n    configOption () {\n      // 给graph添加事件\n      this.graph.addMouseListener(\n        {\n          currentState: null,\n          previousStyle: null,\n\n          mouseDown: (sender, evt) => {\n            if (!evt.state) {\n              console.log('点击了画布')\n              return;\n            } else if (evt.state.cell.edge) {\n              console.log('点击了连线')\n              return;\n            }\n\n            const cell = evt.state.cell;\n            let clickNormalType = false;\n            if (cell.style !== undefined) {\n              clickNormalType = cell.style.includes('normalType');\n            }\n            if (clickNormalType) {\n              // 使用 MxGraph 事件中心，触发自定义事件\n              this.graph.fireEvent(new MxEventObject(MxEvent.NORMAL_TYPE_CLICKED, 'cell', evt));\n            } else {\n              return\n            }\n          },\n\n          mouseMove: (sender, me) => {\n            // console.log('mouseMove')\n            this.graphX = Math.ceil(me.graphX);\n            this.graphY = me.graphY;\n          },\n\n          mouseUp: (sender, evt) => {\n            console.log(\"mouseUp\")\n            if (evt.sourceState == undefined) {\n              return;\n            } else {\n              var cell = evt.sourceState.cell;\n              //  var cell = this.graph.getSelectionCell();\n              if (cell) {\n                cell.vertex ? this.isNode = true : this.isNode = false\n                var getcellStyle = cell.getStyle() ? cell.getStyle() : null;\n                if (!this.isNode) {\n                  getcellStyle ? this.edgeStyle = getcellStyle : 'orthogonalEdgeStyle'\n                }\n                console.log(cell)\n                if (getcellStyle) {\n                  var arr = getcellStyle.split(\";\")\n                  // arr.pop()\n                  var styleObject = {}\n                  arr.forEach((item => {\n                    styleObject[item.split(\"=\")[0]] = item.split(\"=\")[1]\n                  }))\n                  this.cellStyle = styleObject\n                  // if (this.isNode) {\n\n                  // }\n                }\n              } else {\n                this.$message.error(\"请选择节点或者连线\")\n              }\n            }\n          },\n        });\n      // 监听自定义事件\n      this.graph.addListener(MxEvent.NORMAL_TYPE_CLICKED, this.showNormalTypeSelect);\n\n      this.graph.setResizeContainer(false);\n      // 禁用浏览器默认的右键菜单栏 \n      MxEvent.disableContextMenu(this.$refs.container)\n\n      // 自定义右键菜单栏\n      this.graph.popupMenuHandler.factoryMethod = (menu) => {\n        menu.addItem('输出所有节点', null, () => {\n          Object.values(this.graph.getModel().cells).forEach((cell) => {\n            console.log(cell)\n          })\n        })\n      }\n      // 启用工具提示，新连接平滑移动  \n      this.graph.setPanning(true);\n\n      // 开启提示\n      this.graph.setTooltips(false);\n      // 允许连线\n      this.graph.setConnectable(false)\n\n      // 开启方块上的文字编辑功能\n      this.graph.setCellsEditable(false)\n\n      // 禁止改变元素大小\n      this.graph.setCellsResizable(false);\n      // 是否缩放网格\n      MxGraphHandler.prototype.scaleGrid = false;\n\n      // 启用导航线帮助定位\n      MxGraphHandler.prototype.guidesEnabled = false;\n      // Alt 按下禁用导航线\n      MxGraphHandler.prototype.useGuidesForEvent = function (me) {\n        return !MxEvent.isAltDown(me.getEvent());\n      };\n\n      // 选择基本元素开启\n      this.graph.setEnabled(false);\n    },\n\n    //  配置全局样式\n    configureStylesheet (graph) {\n      // 设置节点的文字可被移动\n      graph.vertexLabelsMovable = false;\n      // 设置鼠标悬浮至节点或者连线时高亮显示的颜色\n      new MxCellTracker(graph, '#409eff');\n      var style = new Object();\n      style[MxConstants.STYLE_SHAPE] = MxConstants.SHAPE_LABEL;\n      style[MxConstants.STYLE_PERIMETER] = MxPerimeter.RectanglePerimeter;\n      style[MxConstants.STYLE_VERTICAL_ALIGN] = MxConstants.ALIGN_CENTER;\n      style[MxConstants.STYLE_ALIGN] = MxConstants.ALIGN_CENTER;\n      style[MxConstants.STYLE_IMAGE_ALIGN] = MxConstants.ALIGN_CENTER;\n      style[MxConstants.STYLE_IMAGE_VERTICAL_ALIGN] = MxConstants.ALIGN_CENTER;\n      // style[MxConstants.STYLE_SPACING_TOP] = 6;\n      style[MxConstants.STYLE_SPACING_LEFT] = 5;\n      // style[MxConstants.STYLE_GRADIENTCOLOR] = 'skyblue'; // 渐变颜色\n      style[MxConstants.STYLE_STROKECOLOR] = '#5d65df';   // 线条颜色\n      style[MxConstants.STYLE_FILLCOLOR] = '#FFFFFF';\n      style[MxConstants.STYLE_FONTCOLOR] = '#1d258f';     // 字体颜色\n      style[MxConstants.STYLE_FONTFAMILY] = 'Verdana';    // 字体风格\n      style[MxConstants.STYLE_FONTSIZE] = '12';           // 字体大小\n      style[MxConstants.STYLE_FONTSTYLE] = '0';           // 斜体字\n      style[MxConstants.STYLE_ROUNDED] = false;             // 圆角\n      style[MxConstants.STYLE_IMAGE_WIDTH] = '28';        // 图片宽度\n      style[MxConstants.STYLE_IMAGE_HEIGHT] = '28';       // 图片高度\n      style[MxConstants.STYLE_OPACITY] = '100';            // 节点透明度(不包含字体)\n      graph.getStylesheet().putDefaultVertexStyle(style);\n\n      style = new Object();\n      style[MxConstants.STYLE_SHAPE] = MxConstants.SHAPE_SWIMLANE;\n      style[MxConstants.STYLE_PERIMETER] = MxPerimeter.RectanglePerimeter;\n      style[MxConstants.STYLE_ALIGN] = MxConstants.ALIGN_CENTER;\n      style[MxConstants.STYLE_VERTICAL_ALIGN] = MxConstants.ALIGN_TOP;\n      style[MxConstants.STYLE_FILLCOLOR] = '#409eff';\n      // style[MxConstants.STYLE_GRADIENTCOLOR] = '#409eff';\n      style[MxConstants.STYLE_STROKECOLOR] = '#409eff';\n      style[MxConstants.STYLE_FONTCOLOR] = '#000000';\n      style[MxConstants.STYLE_ROUNDED] = false;\n      style[MxConstants.STYLE_OPACITY] = '80';\n      style[MxConstants.STYLE_STARTSIZE] = '30';\n      style[MxConstants.STYLE_FONTSIZE] = '16';\n      style[MxConstants.STYLE_FONTSTYLE] = 1;\n      graph.getStylesheet().putCellStyle('group', style);\n\n      style = new Object();\n      style[MxConstants.STYLE_SHAPE] = MxConstants.SHAPE_IMAGE;\n      style[MxConstants.STYLE_FONTCOLOR] = '#774400';\n      style[MxConstants.STYLE_PERIMETER] = MxPerimeter.RectanglePerimeter;\n      style[MxConstants.STYLE_PERIMETER_SPACING] = '6';\n      style[MxConstants.STYLE_ALIGN] = MxConstants.ALIGN_LEFT;\n      style[MxConstants.STYLE_VERTICAL_ALIGN] = MxConstants.ALIGN_MIDDLE;\n      style[MxConstants.STYLE_FONTSIZE] = '10';\n      style[MxConstants.STYLE_FONTSTYLE] = 2;\n      style[MxConstants.STYLE_IMAGE_WIDTH] = '16';\n      style[MxConstants.STYLE_IMAGE_HEIGHT] = '16';\n      style[MxConstants.STYLE_BACKGROUNDCOLOR] = 'transparent';\n      graph.getStylesheet().putCellStyle('port', style);\n\n\n      style = graph.getStylesheet().getDefaultEdgeStyle();\n      style[MxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = '#FFFFFF';\n      style[MxConstants.STYLE_STROKEWIDTH] = '2';\n      style[MxConstants.STYLE_ROUNDED] = false;\n      // 获取全局Edge、label样式\n      var edgeStyle = this.graph.getStylesheet().getDefaultEdgeStyle()\n      // let labelStyle = this.graph.getStylesheet().getDefaultVertexStyle();\n      // 设置连线风格(设置为正交折线)\n      edgeStyle['edgeStyle'] = 'orthogonalEdgeStyle';\n\n      // 选中 cell/edge 后的伸缩大小的点/拖动连线位置的点的颜色\n      MxConstants.STYLE_WHITE_SPACE = 'wrap';\n      MxConstants.HANDLE_FILLCOLOR = '#99ccff'\n      MxConstants.HANDLE_STROKECOLOR = '#0088cf'\n      MxConstants.STYLE_ANCHOR_POINT_DIRECTION = 'anchorPointDirection'\n      MxConstants.STYLE_STYLE_ROTATION = 'rotation';\n    },\n\n    // 放大\n    zoomIn () {\n      this.graph.zoomIn()\n    },\n\n    // 缩小\n    zoomOut () {\n      this.graph.zoomOut()\n    },\n\n    // 等比例缩放\n    autoSize () {\n      this.editor.execute('actualSize')\n      // this.graph.fit();//自适应\n      // this.graph.center(true, true, 0.5, 0.5);//将画布放到容器中间\n      // // var sc = graph.getView().getScale();//获取当前的缩放比例\n      // // this.graph.zoomTo(Math.round(sc / 6));//在缩放一半，否则是满屏状态，不好看\n    },\n\n    // 生成图片\n    showImage () {\n      this.editor.execute('show');//直接页面跳转,并以svg流程图\n    },\n\n\n    // 导入xml文件后更新视图\n    uploadPaintFlow (newvalue) {\n      this.graph.selectAll()\n      this.graph.removeCells(this.graph.getSelectionCells())\n      setTimeout(() => {\n        this.decode(newvalue, this.graph)\n        this.$message.success(\"渲染成功\")\n      }, 1000)\n    },\n\n    createXmlDom (str) {\n      if (document.all) { //判断浏览器是否是IE\n        var xmlDom = new ActiveXObject(\"Microsoft.XMLDOM\");\n        xmlDom.loadXML(str);\n        return xmlDom;\n      } else {\n        return (new DOMParser()).parseFromString(str, \"text/xml\");\n      }\n    },\n\n    // 渲染xml流程图\n    decode (graphXml, graph) {\n      this.graph.getModel().beginUpdate();\n      try {\n        // 渲染流程图 方法一:\n        // const xmlDocument = MxUtils.parseXml(graphXml)\n        // const decoder = new MxCodec(xmlDocument)\n        // decoder.decode(xmlDocument.documentElement, graph.getModel())\n        // 渲染流程图 方法二:\n        var xmlDoc = this.createXmlDom(graphXml);\n        var node = xmlDoc.documentElement;\n        var dec = new MxCodec(node.ownerDocument);\n        dec.decode(node, graph.getModel());\n      } finally {\n        this.graph.getModel().endUpdate()\n      }\n    },\n\n    // 导出xml文件\n    outPutXml () {\n      this.isOutputXml = true;\n      this.graphXml = this.encode(this.graph)\n    },\n\n    // 导出xml数据\n    encode (graph) {\n      const encoder = new MxCodec()\n      const result = encoder.encode(graph.getModel())\n      return MxUtils.getPrettyXml(result)\n    },\n    // 加载案例流程图\n    loadFlowCase (index) {\n\n      let loadData = \"\";\n      switch (index) {\n        case 1: loadData = xmlData1; break\n        case 2: loadData = xmlData2; break\n        case 3: loadData = xmlData3; break\n      }\n      let newXml = MxUtils.load(loadData).request.response\n      this.graph.selectAll()\n      this.graph.removeCells(this.graph.getSelectionCells())\n      setTimeout(() => {\n        this.decode(newXml, this.graph)\n\n        this.$message.success(\"加载流程图案例成功\")\n      }, 1000)\n    }\n  },\n\n  mounted () {\n    // 检测浏览器兼容性\n    if (!MxClient.isBrowserSupported()) {\n      this.$message.error('当前浏览器不支持拓扑图功能，请更换浏览器访问，建议使用Chrome浏览器访问!');\n    }\n    else {\n      // Overridden to define per-shape connection points\n      MxGraph.prototype.getAllConnectionConstraints = function (terminal) {\n        if (terminal != null && terminal.shape != null) {\n          if (terminal.shape.stencil != null) {\n            if (terminal.shape.stencil.constraints != null) {\n              return terminal.shape.stencil.constraints;\n            }\n          }\n          else if (terminal.shape.constraints != null) {\n            return terminal.shape.constraints;\n          }\n        }\n        return null;\n      };\n      this.createGraph()\n      this.initGraph()\n      this.configOption()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.customToolbarContainer {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n\n  .toolbarContainer {\n    padding-top: 50px;\n    font-size: 20px;\n    background: #efefef;\n    text-align: center;\n    background-color: #fff;\n    border-right: 1px solid #ededed;\n    width: 15%;\n    position: relative;\n    box-sizing: border-box;\n    overflow-y: scroll;\n    .general-toolbar {\n      .el-collapse-item__wrap .el-collapse-item__content {\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-around;\n        align-content: space-around;\n        .common {\n          width: 30%;\n          cursor: pointer;\n          // padding: 10px;\n          height: 50px;\n          white-space: wrap;\n          text-align: center;\n          position: relative;\n          .generalTooltitle {\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 100%;\n            // transform: translateX(-50%);\n          }\n        }\n      }\n    }\n    .custom-toolbar {\n      .el-collapse-item__content {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-around;\n        align-content: space-around;\n        span {\n          cursor: pointer;\n        }\n      }\n    }\n  }\n  .toolbarContainer::-webkit-scrollbar {\n    display: none;\n  }\n  .graphContainer {\n    margin-top: 50px;\n    height: 100% !important;\n    line-height: 100%;\n    position: relative;\n    overflow: hidden;\n    background-color: #fff !important;\n    flex: 1;\n    background-image: url(\"../../assets/grid.gif\");\n  }\n  .top-tools {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    padding: 0 20px 0 20px;\n    width: 100%;\n    z-index: 1000;\n    background-color: #fff;\n    height: 50px;\n    // border-bottom: 1px solid #ededed;\n    box-shadow: 0px 2px 8px -4px #c4c7c1;\n    .select-edgetype {\n      width: 100px;\n      margin-right: 10px;\n    }\n  }\n  .el-collapse-item__header {\n    padding-left: 30px;\n  }\n  .style-select {\n    width: 20%;\n    background-color: #fff;\n    height: 100%;\n    position: absolute;\n    right: 0;\n    top: 0;\n    border-left: 1px solid #ededed;\n    padding-top: 50px;\n    box-sizing: border-box;\n  }\n  .tools-group {\n    display: flex;\n    justify-content: center;\n    button {\n      margin-left: 22px;\n    }\n  }\n  .aside-button-group {\n    width: 100%;\n    position: sticky;\n    top: 0px;\n    background: #ffffff;\n    box-sizing: border-box;\n    z-index: 1000;\n    border: 1px solid #ededed;\n    border-left: none;\n  }\n}\n\ntable.mxPopupMenu {\n  background: #fff;\n  cursor: pointer;\n  border: 1px solid #ededed;\n  padding: 5px;\n}\n\ndiv.mxPopupMenu {\n  position: absolute;\n}\n.shapgroud {\n  .el-collapse-item__content {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  svg g path {\n    fill: transparent;\n  }\n}\n.flow {\n  stroke-dasharray: 8;\n  animation: dash 0.5s linear;\n  animation-iteration-count: infinite;\n}\n@keyframes dash {\n  to {\n    stroke-dashoffset: -16;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=21561602&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}